vendor_name = ModelSim
source_file = 1, C:/3rdEye/3rdEye/src/SplitClock/SplitClock.vhd
source_file = 1, C:/3rdEye/3rdEye/src/LED_Converter/LED_converter.vhd
source_file = 1, C:/3rdEye/3rdEye/src/Mod_Counter/Mod_Counter.vhd
source_file = 1, C:/3rdEye/3rdEye/src/Mod_Counter/Mod_Counter_internal.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/3rdEye/3rdEye/project/Mod_Counter/db/Mod_Counter.cbx.xml
design_name = Mod_Counter
instance = comp, \disp[0]~output , disp[0]~output, Mod_Counter, 1
instance = comp, \disp[1]~output , disp[1]~output, Mod_Counter, 1
instance = comp, \disp[2]~output , disp[2]~output, Mod_Counter, 1
instance = comp, \disp[3]~output , disp[3]~output, Mod_Counter, 1
instance = comp, \disp[4]~output , disp[4]~output, Mod_Counter, 1
instance = comp, \disp[5]~output , disp[5]~output, Mod_Counter, 1
instance = comp, \disp[6]~output , disp[6]~output, Mod_Counter, 1
instance = comp, \clk~input , clk~input, Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~20 , splitClock_inst|Add0~20, Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~22 , splitClock_inst|Add0~22, Mod_Counter, 1
instance = comp, \reset~input , reset~input, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[11] , splitClock_inst|clkReg[11], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~24 , splitClock_inst|Add0~24, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[12]~11 , splitClock_inst|clkNext[12]~11, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[12] , splitClock_inst|clkReg[12], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~26 , splitClock_inst|Add0~26, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[13]~10 , splitClock_inst|clkNext[13]~10, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[13] , splitClock_inst|clkReg[13], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~28 , splitClock_inst|Add0~28, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[14]~9 , splitClock_inst|clkNext[14]~9, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[14] , splitClock_inst|clkReg[14], Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~7 , splitClock_inst|Equal0~7, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~8 , splitClock_inst|Equal0~8, Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~30 , splitClock_inst|Add0~30, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[15]~8 , splitClock_inst|clkNext[15]~8, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[15] , splitClock_inst|clkReg[15], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~32 , splitClock_inst|Add0~32, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[16] , splitClock_inst|clkReg[16], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~34 , splitClock_inst|Add0~34, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[17]~7 , splitClock_inst|clkNext[17]~7, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[17] , splitClock_inst|clkReg[17], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~36 , splitClock_inst|Add0~36, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[18] , splitClock_inst|clkReg[18], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~38 , splitClock_inst|Add0~38, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[19]~6 , splitClock_inst|clkNext[19]~6, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[19] , splitClock_inst|clkReg[19], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~40 , splitClock_inst|Add0~40, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[20]~5 , splitClock_inst|clkNext[20]~5, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[20] , splitClock_inst|clkReg[20], Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~6 , splitClock_inst|Equal0~6, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~9 , splitClock_inst|Equal0~9, Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~42 , splitClock_inst|Add0~42, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[21]~4 , splitClock_inst|clkNext[21]~4, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[21] , splitClock_inst|clkReg[21], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~44 , splitClock_inst|Add0~44, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[22]~3 , splitClock_inst|clkNext[22]~3, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[22] , splitClock_inst|clkReg[22], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~46 , splitClock_inst|Add0~46, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[23]~2 , splitClock_inst|clkNext[23]~2, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[23] , splitClock_inst|clkReg[23], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~48 , splitClock_inst|Add0~48, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[24] , splitClock_inst|clkReg[24], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~50 , splitClock_inst|Add0~50, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[25]~1 , splitClock_inst|clkNext[25]~1, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[25] , splitClock_inst|clkReg[25], Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~5 , splitClock_inst|Equal0~5, Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~0 , splitClock_inst|Add0~0, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[0]~0 , splitClock_inst|clkNext[0]~0, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[0] , splitClock_inst|clkReg[0], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~2 , splitClock_inst|Add0~2, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[1] , splitClock_inst|clkReg[1], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~4 , splitClock_inst|Add0~4, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[2] , splitClock_inst|clkReg[2], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~6 , splitClock_inst|Add0~6, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[3] , splitClock_inst|clkReg[3], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~8 , splitClock_inst|Add0~8, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[4] , splitClock_inst|clkReg[4], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~10 , splitClock_inst|Add0~10, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[5] , splitClock_inst|clkReg[5], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~12 , splitClock_inst|Add0~12, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[6] , splitClock_inst|clkReg[6], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~14 , splitClock_inst|Add0~14, Mod_Counter, 1
instance = comp, \splitClock_inst|clkNext[7]~12 , splitClock_inst|clkNext[7]~12, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[7] , splitClock_inst|clkReg[7], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~16 , splitClock_inst|Add0~16, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[8] , splitClock_inst|clkReg[8], Mod_Counter, 1
instance = comp, \splitClock_inst|Add0~18 , splitClock_inst|Add0~18, Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[9] , splitClock_inst|clkReg[9], Mod_Counter, 1
instance = comp, \splitClock_inst|clkReg[10] , splitClock_inst|clkReg[10], Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~1 , splitClock_inst|Equal0~1, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~3 , splitClock_inst|Equal0~3, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~0 , splitClock_inst|Equal0~0, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~2 , splitClock_inst|Equal0~2, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal0~4 , splitClock_inst|Equal0~4, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal1~2 , splitClock_inst|Equal1~2, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal1~0 , splitClock_inst|Equal1~0, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal1~1 , splitClock_inst|Equal1~1, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal1 , splitClock_inst|Equal1, Mod_Counter, 1
instance = comp, \splitClock_inst|Equal1~clkctrl , splitClock_inst|Equal1~clkctrl, Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[0]~3 , mod_counter_inst|curCount[0]~3, Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[0] , mod_counter_inst|curCount[0], Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[1]~0 , mod_counter_inst|curCount[1]~0, Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[1] , mod_counter_inst|curCount[1], Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[2]~1 , mod_counter_inst|curCount[2]~1, Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[2] , mod_counter_inst|curCount[2], Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[3]~2 , mod_counter_inst|curCount[3]~2, Mod_Counter, 1
instance = comp, \mod_counter_inst|curCount[3] , mod_counter_inst|curCount[3], Mod_Counter, 1
instance = comp, \led_inst|Mux6~0 , led_inst|Mux6~0, Mod_Counter, 1
instance = comp, \led_inst|Mux5~0 , led_inst|Mux5~0, Mod_Counter, 1
instance = comp, \led_inst|Mux4~0 , led_inst|Mux4~0, Mod_Counter, 1
instance = comp, \led_inst|Mux3~0 , led_inst|Mux3~0, Mod_Counter, 1
instance = comp, \led_inst|Mux2~0 , led_inst|Mux2~0, Mod_Counter, 1
instance = comp, \led_inst|Mux1~0 , led_inst|Mux1~0, Mod_Counter, 1
instance = comp, \led_inst|Mux0~0 , led_inst|Mux0~0, Mod_Counter, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
