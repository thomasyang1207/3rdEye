|UART_Receiver
clk => UART_Receiver_logic:UART_Receiver_logic_inst.clk
clk => Baud_rate_generator:Baud_rate_generator_inst.clk
rst => UART_Receiver_logic:UART_Receiver_logic_inst.rst
rx => UART_Receiver_logic:UART_Receiver_logic_inst.rx
rx_ready << UART_Receiver_logic:UART_Receiver_logic_inst.rx_ready
data_out[0] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[0]
data_out[1] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[1]
data_out[2] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[2]
data_out[3] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[3]
data_out[4] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[4]
data_out[5] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[5]
data_out[6] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[6]
data_out[7] << UART_Receiver_logic:UART_Receiver_logic_inst.data_out[7]
output_valid << UART_Receiver_logic:UART_Receiver_logic_inst.output_valid


|UART_Receiver|UART_Receiver_logic:UART_Receiver_logic_inst
clk => bit_reg[0].CLK
clk => bit_reg[1].CLK
clk => bit_reg[2].CLK
clk => counter_reg[0].CLK
clk => counter_reg[1].CLK
clk => counter_reg[2].CLK
clk => counter_reg[3].CLK
clk => data_reg[0].CLK
clk => data_reg[1].CLK
clk => data_reg[2].CLK
clk => data_reg[3].CLK
clk => data_reg[4].CLK
clk => data_reg[5].CLK
clk => data_reg[6].CLK
clk => data_reg[7].CLK
clk => state_reg~1.DATAIN
rst => bit_reg[0].ACLR
rst => bit_reg[1].ACLR
rst => bit_reg[2].ACLR
rst => counter_reg[0].ACLR
rst => counter_reg[1].ACLR
rst => counter_reg[2].ACLR
rst => counter_reg[3].ACLR
rst => data_reg[0].ACLR
rst => data_reg[1].ACLR
rst => data_reg[2].ACLR
rst => data_reg[3].ACLR
rst => data_reg[4].ACLR
rst => data_reg[5].ACLR
rst => data_reg[6].ACLR
rst => data_reg[7].ACLR
rst => state_reg~3.DATAIN
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => bit_next.OUTPUTSELECT
s_tick => bit_next.OUTPUTSELECT
s_tick => bit_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => counter_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => data_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => bit_next.OUTPUTSELECT
s_tick => bit_next.OUTPUTSELECT
s_tick => bit_next.OUTPUTSELECT
s_tick => output_valid.OUTPUTSELECT
rx => data_next.DATAB
rx => state_next.OUTPUTSELECT
rx => state_next.OUTPUTSELECT
rx => state_next.OUTPUTSELECT
rx => state_next.OUTPUTSELECT
rx => counter_next.OUTPUTSELECT
rx => counter_next.OUTPUTSELECT
rx => counter_next.OUTPUTSELECT
rx => counter_next.OUTPUTSELECT
rx => s_enable.DATAB
s_enable <= s_enable.DB_MAX_OUTPUT_PORT_TYPE
rx_ready <= rx_ready.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_reg[7].DB_MAX_OUTPUT_PORT_TYPE
output_valid <= output_valid.DB_MAX_OUTPUT_PORT_TYPE


|UART_Receiver|Baud_rate_generator:Baud_rate_generator_inst
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => s_tick_reg.CLK
enable => count_reg[0].ACLR
enable => count_reg[1].ACLR
enable => count_reg[2].ACLR
enable => count_reg[3].ACLR
enable => count_reg[4].ACLR
enable => s_tick_reg.ACLR
s_tick <= s_tick_reg.DB_MAX_OUTPUT_PORT_TYPE


